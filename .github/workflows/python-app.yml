# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

#name: Python application
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8
#    - name: Install Bluez on Ubuntu
#      run: sudo apt install -y bluez
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
#    - name: Sign in to Azure 
#    # Use the GitHub secret you added
#    - uses: azure/login@v1
#      with:
#        creds: ${{ secrets.AZURE_CREDENTIALS }}
#    - name: Deploy to Azure Web App
#    # Remove publish-profile
#    - uses: azure/webapps-deploy@v2
#      with:
#        app-name: 'jobinbrew'
#        slot-name: 'production'
#        package: .
#    - name: Sign out of Azure
#      run: |
#        az logout

# Python on Linux Web App
# Build a Python project (using Django/Flask/Bottle frameworks) and deploy it to Azure as a Linux web app.
name: Deploy Python package to Azure Web App as a Linux web app.
on:
  [push]
# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
# See this in-depth article on CI for Python applications: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
#
# 1. Set up the following secrets in your repository:
#   AZURE_CREDENTIALS_GITHUB_SECRET
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: jobinbrew # set this to your application's name
  WORKING_DIRECTORY: '.'         # set this to the path to your path of working directory inside github repository, defaults to the repository root
  PYTHON_VERSION: '3.7' 
  STARTUP_COMMAND: ''           # set this to the startup command required to start the gunicorn server. default it is empty

jobs:
 build-and-deploy:
  runs-on: ubuntu-latest
  steps:
  # checkot the repo 
  - uses: actions/checkout@master
  # setup python
  - name: Setup Python
    uses: actions/setup-python@v1
    with:
     python-version: ${{ env.PYTHON_VERSION }}
  # install dependencies
  - name: python install
    working-directory: ${{ env.WORKING_DIRECTORY }}
    run: |
     pip install setuptools
     pip install -r requirements.txt
  # Azure login
  - uses: azure/login@v1
    with:
     creds: ${{ secrets.AZURE_CREDENTIALS_GITHUB_SECRET }}
  - uses: azure/appservice-settings@v1
    with:
     app-name: ${{ env.AZURE_WEBAPP_NAME }}
     mask-inputs: false
     general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}' #'General configuration settings as Key Value pairs'
  # deploy web app
  - uses: azure/webapps-deploy@v2
    with:
     app-name: ${{ env.AZURE_WEBAPP_NAME }}
     package: ${{ env.WORKING_DIRECTORY }}
     startup-command: ${{ env.STARTUP_COMMAND }}
  # Azure logout
  - name: logout
    run: |
     az logout